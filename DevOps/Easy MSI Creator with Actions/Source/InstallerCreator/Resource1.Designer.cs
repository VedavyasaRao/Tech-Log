//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstallerCreator {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("InstallerCreator.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon Alien {
            get {
                object obj = ResourceManager.GetObject("Alien", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap bad {
            get {
                object obj = ResourceManager.GetObject("bad", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CustomActions {
            get {
                object obj = ResourceManager.GetObject("CustomActions", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;Edit Configuration&quot;:
        ///    {
        ///        &quot;name&quot;:&quot;Edit Configuration&quot;,
        ///        &quot;folderlevel&quot;:false,
        ///        &quot;leaflelvel&quot;:true,
        ///        &quot;executable&quot;:&quot;%InstallDir%\\setup\\ConfigEditor.exe&quot;,
        ///        &quot;args&quot;:&quot;-t:\u003cuser message\u003e&quot;,
        ///        &quot;filter&quot;:&quot;config&quot;,
        ///        &quot;grpaction&quot;:true,
        ///        &quot;priority&quot;:0,
        ///        &quot;builtin&quot;:true,
        ///        &quot;wfe&quot;:true,
        ///        &quot;binstall&quot;:true,
        ///        &quot;buninstall&quot;:false,
        ///        &quot;tooltip&quot;:&quot;Prompts users to enter inputs for the .config files. \r\n\u003cuser message\u003e \r\n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string customactions1 {
            get {
                return ResourceManager.GetString("customactions1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] dummy {
            get {
                object obj = ResourceManager.GetObject("dummy", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] EasyInstaller {
            get {
                object obj = ResourceManager.GetObject("EasyInstaller", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap filw {
            get {
                object obj = ResourceManager.GetObject("filw", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder {
            get {
                object obj = ResourceManager.GetObject("folder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap good {
            get {
                object obj = ResourceManager.GetObject("good", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] InstallerCreator_User_Manual {
            get {
                object obj = ResourceManager.GetObject("InstallerCreator_User_Manual", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set objShell = CreateObject(&quot;Shell.Application&quot; ) 
        ///Set Ag=Wscript.Arguments 
        ///Set SrcFldr=objShell.NameSpace(Ag(0)) 
        ///Set DestFldr=objShell.NameSpace(Ag(1)) 
        ///dc = DestFldr.Items().count
        ///
        ///Set FldrItems=SrcFldr.Items 
        ///DestFldr.CopyHere FldrItems, 64
        ///
        ///do 
        ///WScript.Sleep 1000
        ///loop while DestFldr.Items().count &lt; (SrcFldr.Items().count + dc)
        ///.
        /// </summary>
        internal static string makezip {
            get {
                return ResourceManager.GetString("makezip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap newlayout {
            get {
                object obj = ResourceManager.GetObject("newlayout", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap rename {
            get {
                object obj = ResourceManager.GetObject("rename", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap save {
            get {
                object obj = ResourceManager.GetObject("save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap sort {
            get {
                object obj = ResourceManager.GetObject("sort", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set objShell = CreateObject(&quot;Shell.Application&quot; ) 
        ///Set Ag=Wscript.Arguments 
        ///Set SrcFldr=objShell.NameSpace(Ag(0)) 
        ///Set DestFldr=objShell.NameSpace(Ag(1)) 
        ///dc = DestFldr.Items().count
        ///
        ///Set FldrItems=SrcFldr.Items 
        ///DestFldr.CopyHere FldrItems, 64
        ///
        ///.
        /// </summary>
        internal static string unzip {
            get {
                return ResourceManager.GetString("unzip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Const msiOpenDatabaseModeDirect = 2 
        ///
        ///Const MSIMODIFY_REPLACE = 4 
        ///
        ///Dim sPathToMSI, retVal, objWI, objDB, objView, objRecord 
        ///
        ///
        ///
        ///Main
        ///
        ///
        ///Sub Main 
        ///
        ///    Dim objArgs, ArgCount, cArgument, objFS, sArgument 
        ///
        ///    retVal = 1 
        ///
        ///    &apos;Get the command line parameters. 
        ///
        ///    Set objArgs    = WScript.Arguments 
        ///
        ///    ArgCount    = objArgs.Count 
        ///
        ///    If ArgCount = 0 Then 
        ///
        ///        WScript.Quit 
        ///
        ///    End If 
        ///
        ///	sQuery = &quot;SELECT `ComponentId` FROM `Component` Where `Component`=&apos;&quot; &amp; CStr(WScript.Arguments(1)) &amp;&quot;&apos;&quot;
        ///    sPath [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateDB {
            get {
                return ResourceManager.GetString("UpdateDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos; Windows Installer utility to generate file cabinets from MSI database
        ///&apos; For use with Windows Scripting Host, CScript.exe or WScript.exe
        ///&apos; Copyright (c) 1999-2001, Microsoft Corporation
        ///&apos; Demonstrates the access to install engine and actions
        ///&apos;
        ///Option Explicit
        ///
        ///&apos; FileSystemObject.CreateTextFile and FileSystemObject.OpenTextFile
        ///Const OpenAsASCII   = 0 
        ///Const OpenAsUnicode = -1
        ///
        ///&apos; FileSystemObject.CreateTextFile
        ///Const OverwriteIfExist = -1
        ///Const FailIfExist      = 0
        ///
        ///&apos; FileSystemObject.OpenTextFile
        ///Const Ope [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WiMakCab {
            get {
                return ResourceManager.GetString("WiMakCab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos; Windows Installer utility to execute SQL statements against an installer database
        ///&apos; For use with Windows Scripting Host, CScript.exe or WScript.exe
        ///&apos; Copyright (c) Microsoft Corporation. All rights reserved.
        ///&apos; Demonstrates the script-driven database queries and updates
        ///&apos;
        ///Option Explicit
        ///
        ///Const msiOpenDatabaseModeReadOnly = 0
        ///Const msiOpenDatabaseModeTransact = 1
        ///
        ///Dim argNum, argCount:argCount = Wscript.Arguments.Count
        ///If (argCount &lt; 2) Then
        ///	Wscript.Echo &quot;Windows Installer utility to execute SQL queries a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WiRunSQL {
            get {
                return ResourceManager.GetString("WiRunSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos; Windows Installer utility to manage the summary information stream
        ///&apos; For use with Windows Scripting Host, CScript.exe or WScript.exe
        ///&apos; Copyright (c) Microsoft Corporation. All rights reserved.
        ///&apos; Demonstrates the use of the database summary information methods
        ///
        ///Option Explicit
        ///
        ///Const msiOpenDatabaseModeReadOnly     = 0
        ///Const msiOpenDatabaseModeTransact     = 1
        ///Const msiOpenDatabaseModeCreate       = 3
        ///
        ///Dim propList(19, 1)
        ///propList( 1,0) = &quot;Codepage&quot;    : propList( 1,1) = &quot;ANSI codepage of text strings in s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WiSumInf {
            get {
                return ResourceManager.GetString("WiSumInf", resourceCulture);
            }
        }
    }
}
