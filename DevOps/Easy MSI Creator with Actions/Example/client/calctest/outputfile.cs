using System;
using System.Reflection;

namespace autogenerated
{
    class COM_LB_SillyCalc_WSC_1
    {
        object remoteobj;

        public COM_LB_SillyCalc_WSC_1(string remotepc="")
        {
            remoteobj = (remotepc != "") ? Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid("502b2117-d5ac-41b2-9441-b466932f613f"), remotepc)) : Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid("502b2117-d5ac-41b2-9441-b466932f613f")));
        }

        public COM_LB_SillyCalc_WSC_1(object remoteobj)
        {
            this.remoteobj = remoteobj;
        }

        public object add( object op1,  object op2 )
        {
            object[] parameters = null;
            parameters = new object[]{op1, op2 };
            return  (object) remoteobj.GetType().InvokeMember("add",BindingFlags.InvokeMethod, null,remoteobj,parameters);
        }

    }

    class CSComAdmin
    {

        public static void StartStopApplication(string remotepc, string clsid, bool bstart)
        {
            object catalog = Activator.CreateInstance(Type.GetTypeFromProgID("COMAdmin.COMAdminCatalog"));
            object[] parameters = null;
            if (remotepc != "")
            {
                parameters = new object[] { remotepc };
                catalog.GetType().InvokeMember("Connect", BindingFlags.InvokeMethod, null, catalog, parameters);
            }

            parameters = new object[] { "Applications" };
            object applications = catalog.GetType().InvokeMember("GetCollection", BindingFlags.InvokeMethod, null, catalog, parameters);
            applications.GetType().InvokeMember("Populate", BindingFlags.InvokeMethod, null, applications, null);
            int countapps = (int)applications.GetType().InvokeMember("Count", BindingFlags.GetProperty, null, applications, null);

            for (int i = 0; i < countapps; ++i)
            {
                parameters = new object[] { i };
                object application = applications.GetType().InvokeMember("item", BindingFlags.GetProperty, null, applications, parameters);

                object key = (string)application.GetType().InvokeMember("Key", BindingFlags.GetProperty, null, application, null);
                parameters = new object[] { "Components", key };
                object components = applications.GetType().InvokeMember("GetCollection", BindingFlags.InvokeMethod, null, applications, parameters);
                components.GetType().InvokeMember("Populate", BindingFlags.InvokeMethod, null, components, null);

                int countcomps = (int)components.GetType().InvokeMember("Count", BindingFlags.GetProperty, null, components, null);
                for (int j = 0; j < countcomps; ++j)
                {
                    parameters = new object[] { j };
                    object component = components.GetType().InvokeMember("item", BindingFlags.GetProperty, null, components, parameters);

                    parameters = new object[] { "CLSID" };
                    object clsidcomp = component.GetType().InvokeMember("Value", BindingFlags.GetProperty, null, component, parameters);


                    if (clsid.ToLower() == ((string)clsidcomp).ToLower())
                    {
                        object appname = application.GetType().InvokeMember("Name", BindingFlags.GetProperty, null, application, null);
                        parameters = new object[] { appname };
                        catalog.GetType().InvokeMember(bstart ? "StartApplication" : "ShutdownApplication", BindingFlags.InvokeMethod, null, catalog, parameters);
                        return;
                    }
                }

            }
        }

        public static void StartStop_SillyCalc_WSC_1(string remotepc, bool bstart)
        {
            StartStopApplication(remotepc,"{502b2117-d5ac-41b2-9441-b466932f613f}",bstart);
        }

    }
}
