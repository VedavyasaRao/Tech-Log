//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LBCodeGenerator {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource2 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource2() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LBCodeGenerator.Resource2", typeof(Resource2).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap About {
            get {
                object obj = ResourceManager.GetObject("About", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following 
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;#1#&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;VRRAO&quot;)]
        ///[assembly: AssemblyProduct(&quot;#1#&quot;)]
        ///[assembly: AssemblyCopyright(&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string assemblyinfo {
            get {
                return ResourceManager.GetString("assemblyinfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Reflection;
        ///using System.Runtime.InteropServices;
        ///using System.EnterpriseServices;
        ///
        ///namespace #1#
        ///{.
        /// </summary>
        internal static string class1 {
            get {
                return ResourceManager.GetString("class1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap erase {
            get {
                object obj = ResourceManager.GetObject("erase", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon lbwiz {
            get {
                object obj = ResourceManager.GetObject("lbwiz", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Release&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProductVersion&gt;8.0.30703&lt;/ProductVersion&gt;
        ///    &lt;SchemaVersion&gt;2.0&lt;/SchemaVersion&gt;
        ///    &lt;ProjectGuid&gt;#1#&lt;/ProjectGuid&gt;
        ///    &lt;OutputType&gt;Library&lt;/OutputType&gt;
        ///    &lt;AppDesignerFolder&gt;Prope [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string projectfile {
            get {
                return ResourceManager.GetString("projectfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;3.5&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Release&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProductVersion&gt;9.0.30729&lt;/ProductVersion&gt;
        ///    &lt;SchemaVersion&gt;2.0&lt;/SchemaVersion&gt;
        ///    &lt;ProjectGuid&gt;#1#&lt;/ProjectGuid&gt;
        ///    &lt;OutputType&gt;Library&lt;/OutputType&gt;
        ///    &lt;AppDesignerFolder&gt;Prope [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string projectfile35 {
            get {
                return ResourceManager.GetString("projectfile35", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Reflection;
        ///using System.Runtime.InteropServices;
        ///using System.EnterpriseServices;
        ///using System.Windows.Threading;
        ///using iAssets.Domain.Common;
        ///using System.Net;
        ///using System.Threading;
        ///
        ///namespace #1#
        ///{.
        /// </summary>
        internal static string sscfclass1 {
            get {
                return ResourceManager.GetString("sscfclass1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Release&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProductVersion&gt;8.0.30703&lt;/ProductVersion&gt;
        ///    &lt;SchemaVersion&gt;2.0&lt;/SchemaVersion&gt;
        ///    &lt;ProjectGuid&gt;#1#&lt;/ProjectGuid&gt;
        ///    &lt;OutputType&gt;Library&lt;/OutputType&gt;
        ///    &lt;AppDesignerFolder&gt;Prope [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sscfprojectfile {
            get {
                return ResourceManager.GetString("sscfprojectfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static void StartStopApplication(string remotepc, string clsid, bool bstart)
        ///        {
        ///            dynamic catalog = Activator.CreateInstance(Type.GetTypeFromProgID(&quot;COMAdmin.COMAdminCatalog&quot;));
        ///            if (remotepc != &quot;&quot;)
        ///            {
        ///                catalog.Connect(remotepc);
        ///            }
        ///
        ///            dynamic applications = catalog.GetCollection(&quot;Applications&quot;);
        ///            applications.Populate();
        ///
        ///            for (int i = 0; i &lt; applications.Count; ++i)
        ///            {
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string startstopcomappcs {
            get {
                return ResourceManager.GetString("startstopcomappcs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public static void StartStopApplication(string remotepc, string clsid, bool bstart)
        ///        {
        ///            object catalog = Activator.CreateInstance(Type.GetTypeFromProgID(&quot;COMAdmin.COMAdminCatalog&quot;));
        ///            object[] parameters = null;
        ///            if (remotepc != &quot;&quot;)
        ///            {
        ///                parameters = new object[] { remotepc };
        ///                catalog.GetType().InvokeMember(&quot;Connect&quot;, BindingFlags.InvokeMethod, null, catalog, parameters);
        ///            }
        ///
        ///            parameters = new ob [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string startstopcomappcs35 {
            get {
                return ResourceManager.GetString("startstopcomappcs35", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Sub StartStopApplication(remotepc, clsid, bstart )
        ///		Set catalog = Createobject(&quot;COMAdmin.COMAdminCatalog&quot;)
        ///	    if (remotepc &lt;&gt; &quot;&quot;) Then
        ///	        Call catalog.Connect(remotepc)
        ///	    End If
        ///	
        ///	    Set applications = catalog.GetCollection(&quot;Applications&quot;)
        ///	    Call applications.Populate()
        ///	
        ///	    for i = 0 To  applications.Count-1
        ///	        Set application = applications.item(i)
        ///	        Set components = applications.GetCollection(&quot;Components&quot;, application.Key)
        ///	        Call components.Popula [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string startstopcomappvb {
            get {
                return ResourceManager.GetString("startstopcomappvb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] uiadriver {
            get {
                object obj = ResourceManager.GetObject("uiadriver", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
