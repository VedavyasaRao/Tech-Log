using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using COMLibHelper;

namespace LBCodeGenerator
{
    class CodeGenerator
    {
        static string onetab = new string(' ', 4);
        static string twotab = onetab + onetab;
        static string threetab = twotab + onetab;
        static string fourtab = threetab + onetab;
        static string fivetab = fourtab + onetab;
        static string sixtab = fivetab + onetab;

        public static List<Comobjectstorage> comobjs = new List<Comobjectstorage>();
        public static StringBuilder sbcs = new StringBuilder();
        public static StringBuilder sbvbs = new StringBuilder();
        public static StringBuilder sbwcf = new StringBuilder();
        public static StringBuilder sbreg = new StringBuilder();
        public static StringBuilder sbsscf = new StringBuilder();
        public static StringBuilder sbsscfI = new StringBuilder();
        public static StringBuilder sbsscfC = new StringBuilder();

        public static void Generatecode(List<Comobjectstorage> sellist, Program.lbops ops)
        {
            comobjs = new List<Comobjectstorage>();
            sbcs = new StringBuilder();
            sbvbs = new StringBuilder();
            sbwcf = new StringBuilder();
            sbreg = new StringBuilder();
            sbsscf = new StringBuilder();
            sbsscfI = new StringBuilder();
            sbsscfC = new StringBuilder();

            CodeGenHelper.bincoptional = ((ops  & Program.lbops.incopt) > 0);
            CodeGenHelper.GatherData(sellist);
            comobjs = sellist;

            bool bcs = ((ops & Program.lbops.cs) != 0);
            bool bvb = ((ops & Program.lbops.vb) != 0);
            bool breg = ((ops & Program.lbops.reg) != 0);
            bool bwcf = ((ops & Program.lbops.wcf) != 0);
            bool bnet35 = ((ops & Program.lbops.net35) != 0);
            bool bsscfserver = ((ops & Program.lbops.sscfserver) != 0);
            bool bsscfclient = ((ops & Program.lbops.sscfclient) != 0);
            bool bcomplus = ((ops & Program.lbops.complus) != 0);

            if (bcs || bwcf || bsscfserver)
                Generateoutputfilecs(bcs, bwcf, bnet35, bsscfserver, bcomplus);

            if (bvb || bwcf || bsscfserver)
                Generateoutputfilevbs(bvb, bwcf, bsscfserver, bcomplus);

            if (breg)
                Generateclassesreg();

            if (bwcf)
                Generatewcfclass1cs(bnet35);

            if (bsscfserver)
            {
                Generatesscfclass1cs();
                Generatesscfinterfaces();
                Generatesscfimpl();
            }

            if (bsscfclient)
            {
                Generatesscfclientclass1cs();
                Generatesscfclientimpl();
            }


        }

        static void Generateoutputfilecs(bool bcs, bool bwcf, bool bnet35, bool bsscfserver, bool bcomplus)
        {
            sbcs.AppendLine("using System;");
            sbcs.AppendLine("using System.Reflection;");

            sbcs.AppendLine();
            sbcs.AppendLine("namespace autogenerated");
            sbcs.AppendLine("{");

            if (bcs && !bnet35)
            {
                Generateoutputfilecs40(bcomplus);
            }
            
            if (bcs && bnet35)
            {
                Generateoutputfilecs35(bcomplus);
            }
            if (bcomplus)
            {
                sbcs.AppendLine(onetab + "class CSComAdmin");
                sbcs.AppendLine(onetab + "{");
                sbcs.AppendLine();
                sbcs.AppendLine(twotab + (bnet35 ? LBCodeGenerator.Resource2.startstopcomappcs35 : LBCodeGenerator.Resource2.startstopcomappcs));
                sbcs.AppendLine();
                foreach (Comobjectstorage cob in comobjs)
                {
                    sbcs.AppendFormat(twotab + "public static void StartStop_{0}_{1}(string remotepc, bool bstart)", cob.namesp, cob.name);
                    sbcs.AppendLine();
                    sbcs.AppendLine(twotab + "{");
                    sbcs.AppendFormat(threetab + "StartStopApplication(remotepc,\"{0}\",bstart);", cob.clsid.ToString("B"));
                    sbcs.AppendLine();
                    sbcs.AppendLine(twotab + "}");
                    sbcs.AppendLine();

                    if (bwcf || bsscfserver)
                    {
                        sbcs.AppendFormat(twotab + "public static void StartStop_#1#_{0}(string remotepc, bool bstart)", cob.name);
                        sbcs.AppendLine();
                        sbcs.AppendLine(twotab + "{");
                        sbcs.AppendFormat(threetab + "StartStopApplication(remotepc,\"{0}\",bstart);", cob.wcfclsid.ToString("B"));
                        sbcs.AppendLine();
                        sbcs.AppendLine(twotab + "}");
                        sbcs.AppendLine();
                    }
                }
                sbcs.AppendLine(onetab + "}");
                sbcs.AppendLine("}");
            }
        }


        static void Generateoutputfilecs40(bool bcomplus)
        {
            foreach (Comobjectstorage cob in comobjs)
            {
                sbcs.AppendFormat(onetab + "class COM_LB_{0}_{1}", cob.namesp, cob.name);
                sbcs.AppendLine();
                sbcs.AppendLine(onetab + "{");
                sbcs.AppendLine(twotab + "dynamic remoteobj;");
                sbcs.AppendLine();
                if (bcomplus)
                    sbcs.AppendFormat(twotab + "public COM_LB_{0}_{1}(string remotepc=\"\")", cob.namesp, cob.name);
                else
                    sbcs.AppendFormat(twotab + "public COM_LB_{0}_{1}()", cob.namesp, cob.name);
                sbcs.AppendLine();
                sbcs.AppendLine(twotab + "{");
                if (bcomplus)
                    sbcs.AppendFormat(threetab + "remoteobj = (remotepc != \"\") ? Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(\"{0}\"), remotepc)) : Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(\"{0}\")));", cob.clsid);
                else
                    sbcs.AppendFormat(threetab + "remoteobj = Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(\"{0}\")));", cob.clsid);
                sbcs.AppendLine();
                sbcs.AppendLine(twotab + "}");
                sbcs.AppendLine();

                sbcs.AppendFormat(twotab + "public COM_LB_{0}_{1}(dynamic remoteobj)", cob.namesp, cob.name);
                sbcs.AppendLine();
                sbcs.AppendLine(twotab + "{");
                sbcs.AppendLine(threetab + "this.remoteobj = remoteobj;");
                sbcs.AppendLine(twotab + "}");
                sbcs.AppendLine();

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.getpars.Count != 0 || prop.setpars.Count != 0)
                        continue;

                    sbcs.AppendFormat(twotab + "public {0} {1}", prop.returntype, prop.name);
                    sbcs.AppendLine();
                    sbcs.AppendLine(twotab + "{");

                    if (prop.bget && prop.getpars.Count == 0)
                    {
                        sbcs.AppendLine(threetab + "get");
                        sbcs.AppendLine(threetab + "{");
                        sbcs.AppendFormat(fourtab + "return remoteobj.{0};", prop.name);
                        sbcs.AppendLine();
                        sbcs.AppendLine(threetab + "}");
                    }

                    if (prop.bset && prop.setpars.Count == 0)
                    {
                        sbcs.AppendLine(threetab + "set");
                        sbcs.AppendLine(threetab + "{");
                        sbcs.AppendFormat(fourtab + "remoteobj.{0} = value;", prop.name);
                        sbcs.AppendLine();
                        sbcs.AppendLine(threetab + "}");
                    }
                    sbcs.AppendLine(twotab + "}");
                    sbcs.AppendLine();

                }


                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.bget && prop.getpars.Count != 0)
                    {
                        sbcs.AppendFormat(twotab + "public {0} get_{1}(", prop.returntype, prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbcs.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbcs.AppendLine(")");
                        sbcs.AppendLine(twotab + "{");
                        sbcs.AppendFormat(threetab + "return remoteobj.{0}[", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbcs.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbcs.AppendLine("];");
                        sbcs.AppendLine(twotab + "}");
                        sbcs.AppendLine();
                    }

                    if (prop.bset && prop.setpars.Count != 0)
                    {
                        sbcs.AppendFormat(twotab + "public void set_{0}(", prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbcs.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbcs.AppendLine(", object pvalue)");
                        sbcs.AppendLine(twotab + "{");
                        sbcs.AppendFormat(threetab + "remoteobj.{0}[", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbcs.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbcs.AppendLine("] = pvalue;");
                        sbcs.AppendLine(twotab + "}");
                        sbcs.AppendLine();
                    }
                }



                foreach (Comobjectstorage.classmtds mtd in cob.mtds)
                {
                    string ret = mtd.returntype;

                    sbcs.AppendFormat(twotab + "public {0} {1}(", mtd.getrettype(), mtd.name);

                    int k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbcs.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbcs.AppendLine(")");

                    sbcs.AppendLine(twotab + "{");
                    sbcs.AppendFormat(threetab + "{0} remoteobj.{1}(", mtd.getcallrettype(), mtd.name);

                    k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbcs.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbcs.AppendLine(");");
                    sbcs.AppendLine();
                    sbcs.AppendLine(twotab + "}");
                    sbcs.AppendLine();

                }

                sbcs.AppendLine(onetab + "}");
                sbcs.AppendLine();

            }
        }


        static void Generateoutputfilecs35(bool bcomplus)
        {
            foreach (Comobjectstorage cob in comobjs)
            {
                sbcs.AppendFormat(onetab + "class COM_LB_{0}_{1}", cob.namesp, cob.name);
                sbcs.AppendLine();
                sbcs.AppendLine(onetab + "{");
                sbcs.AppendLine(twotab + "object remoteobj;");
                sbcs.AppendLine();
                if (bcomplus)
                    sbcs.AppendFormat(twotab + "public COM_LB_{0}_{1}(string remotepc=\"\")", cob.namesp, cob.name);
                else
                    sbcs.AppendFormat(twotab + "public COM_LB_{0}_{1}()", cob.namesp, cob.name);
                sbcs.AppendLine();
                sbcs.AppendLine(twotab + "{");
                if (bcomplus)
                    sbcs.AppendFormat(threetab + "remoteobj = (remotepc != \"\") ? Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(\"{0}\"), remotepc)) : Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(\"{0}\")));", cob.clsid);
                else
                    sbcs.AppendFormat(threetab + "remoteobj = Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(\"{0}\")));", cob.clsid);

                sbcs.AppendLine();
                sbcs.AppendLine(twotab + "}");
                sbcs.AppendLine();

                sbcs.AppendFormat(twotab + "public COM_LB_{0}_{1}(object remoteobj)", cob.namesp, cob.name);
                sbcs.AppendLine();
                sbcs.AppendLine(twotab + "{");
                sbcs.AppendLine(threetab + "this.remoteobj = remoteobj;");
                sbcs.AppendLine(twotab + "}");
                sbcs.AppendLine();

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.getpars.Count != 0 || prop.setpars.Count != 0)
                        continue;

                    sbcs.AppendFormat(twotab + "public {0} {1}", prop.returntype, prop.name);
                    sbcs.AppendLine();
                    sbcs.AppendLine(twotab + "{");

                    if (prop.bget && prop.getpars.Count == 0)
                    {
                        sbcs.AppendLine(threetab + "get");
                        sbcs.AppendLine(threetab + "{");
                        sbcs.AppendFormat(fourtab + "return ({0}) remoteobj.GetType().InvokeMember(\"{1}\",BindingFlags.GetProperty, null, remoteobj, null);", prop.returntype, prop.name);
                        sbcs.AppendLine();
                        sbcs.AppendLine(threetab + "}");
                    }

                    if (prop.bset && prop.setpars.Count == 0)
                    {
                        sbcs.AppendLine(threetab + "set");
                        sbcs.AppendLine(threetab + "{");
                        sbcs.AppendLine(fourtab + "object[] parameters = new object[]{value};");
                        sbcs.AppendFormat(fourtab + "remoteobj.GetType().InvokeMember(\"{0}\", BindingFlags.SetProperty,null, remoteobj, parameters);", prop.name);
                        sbcs.AppendLine();
                        sbcs.AppendLine(threetab + "}");
                    }
                    sbcs.AppendLine(twotab + "}");
                    sbcs.AppendLine();

                }


                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.bget && prop.getpars.Count != 0)
                    {
                        sbcs.AppendFormat(twotab + "public {0} get_{1}(", prop.returntype, prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbcs.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbcs.AppendLine(")");
                        sbcs.AppendLine(twotab + "{");
                        sbcs.AppendFormat(threetab + "object[] parameters = new object[]{0}", '{');
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbcs.AppendFormat("{0}{1} ", par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbcs.AppendFormat("{0};", '}');
                        sbcs.AppendLine();
                        sbcs.AppendFormat(threetab + "return ({0}) remoteobj.GetType().InvokeMember(\"{1}\", BindingFlags.GetProperty,null, remoteobj, parameters);", prop.returntype, prop.name);
                        sbcs.AppendLine();
                        sbcs.AppendLine(twotab + "}");
                        sbcs.AppendLine();
                    }

                    if (prop.bset && prop.setpars.Count != 0)
                    {
                        sbcs.AppendFormat(twotab + "public void set_{0}(", prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbcs.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbcs.Append(", object pvalue)");
                        sbcs.AppendLine(twotab + "{");

                        sbcs.AppendFormat(fourtab + "object[] parameters = new object[]{0}", '{');
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbcs.AppendFormat("{0}{1} ", par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbcs.AppendFormat(",pvalue{0};", '}');
                        sbcs.AppendLine();
                        sbcs.AppendFormat(fourtab + "remoteobj.GetType().InvokeMember(\"{0}\", BindingFlags.SetProperty,null, remoteobj, parameters);", prop.name);
                        sbcs.AppendLine(twotab + "}");
                        sbcs.AppendLine();
                    }
                }

                foreach (Comobjectstorage.classmtds mtd in cob.mtds)
                {
                    string ret = mtd.returntype;

                    sbcs.AppendFormat(twotab + "public {0} {1}(", mtd.getrettype(), mtd.name);

                    int k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbcs.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbcs.AppendLine(")");

                    sbcs.AppendLine(twotab + "{");
                    sbcs.AppendLine(threetab + "object[] parameters = null;");

                    if (mtd.pars.Count > 0)
                    {
                        sbcs.AppendFormat(threetab + "parameters = new object[]{0}", '{');
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in mtd.pars)
                        {
                            sbcs.AppendFormat("{0}{1} ", par.name, (k == mtd.pars.Count ? "" : ","));
                            k++;
                        }
                        sbcs.AppendFormat("{0};", '}');
                        sbcs.AppendLine();
                    }
                    sbcs.AppendFormat(threetab + "{0}{1}remoteobj.GetType().InvokeMember(\"{2}\",BindingFlags.InvokeMethod, null,remoteobj,parameters);", mtd.getcallrettype(), (mtd.getcallrettype() != "") ? (" (" + mtd.returntype + ") ") : "", mtd.name);
                    sbcs.AppendLine();
                    sbcs.AppendLine(twotab + "}");
                    sbcs.AppendLine();
                }

                sbcs.AppendLine(onetab + "}");
                sbcs.AppendLine();

            }
        }

        static void Generateoutputfilevbs(bool bvb, bool bwcf, bool bsscfserver, bool bcomplus)
        {
            if (bvb)
            {
                foreach (Comobjectstorage cob in comobjs)
                {
                    sbvbs.AppendFormat("Class COM_LB_{0}_{1}", cob.namesp, cob.name);
                    sbvbs.AppendLine();
                    sbvbs.AppendLine();
                    sbvbs.AppendLine(onetab + "Private remoteobj");
                    sbvbs.AppendLine();
                    if (bcomplus)
                        sbvbs.AppendLine(onetab + "Public Sub CreateComObject(remotepc)");
                    else
                        sbvbs.AppendLine(onetab + "Public Sub CreateComObject()");

                    if (bcomplus)
                    {
                        sbvbs.AppendLine(twotab + "if remotepc = \"\" then");
                        //sbvbs.AppendFormat(threetab + "set remoteobj = Createobject(\"{0}.{1}\")", cob.namesp, cob.name);
                        sbvbs.AppendFormat(threetab + "set remoteobj = Createobject(\"{0}\")", cob.progid);
                        sbvbs.AppendLine();
                        sbvbs.AppendLine(twotab + "else");
                    }
                    //sbvbs.AppendFormat(threetab + "set remoteobj = Createobject(\"{0}.{1}\",remotepc)", cob.namesp, cob.name);
                    sbvbs.AppendFormat(threetab + "set remoteobj = Createobject(\"{0}\",remotepc)", cob.progid);
                    sbvbs.AppendLine();
                    if (bcomplus)
                        sbvbs.AppendLine(twotab + "End If");
                    sbvbs.AppendLine(onetab + "End Sub");
                    sbvbs.AppendLine();

                    sbvbs.AppendLine(onetab + "Public Sub SetObject(premoteobj)");
                    sbvbs.AppendLine(twotab + "set remoteobj = premoteobj");
                    sbvbs.AppendLine(onetab + "End Sub");
                    sbvbs.AppendLine();

                    sbvbs.AppendLine(onetab + "Public Property Get CLSID");
                    sbvbs.AppendFormat(twotab + "CLSID = \"{0}\"", cob.clsid.ToString("B"));
                    sbvbs.AppendLine();
                    sbvbs.AppendLine(onetab + "End Property");
                    sbvbs.AppendLine();


                    foreach (Comobjectstorage.classprops prop in cob.props)
                    {
                        if (prop.bget)
                        {
                            sbvbs.AppendFormat(onetab + "Public Property Get {0}", prop.name);
                            if (prop.getpars.Count > 0)
                            {
                                int k = 1;
                                sbvbs.Append("(");
                                foreach (Comobjectstorage.paramtr par in prop.getpars)
                                {
                                    sbvbs.AppendFormat("{0}{1}  ", par.name, (k == prop.getpars.Count ? "" : ","));
                                    k++;
                                }
                                sbvbs.Append(")");
                            }
                            sbvbs.AppendLine();
                            StringBuilder arg = new StringBuilder();
                            arg.AppendFormat("remoteobj.{0}", prop.name);
                            if (prop.getpars.Count > 0)
                            {
                                int k = 1;
                                arg.Append("(");
                                foreach (Comobjectstorage.paramtr par in prop.getpars)
                                {
                                    arg.AppendFormat("{0}{1}  ", par.name, (k == prop.getpars.Count ? "" : ","));
                                    k++;
                                }
                                arg.Append(")");
                            }

                            sbvbs.AppendFormat(twotab + " if isobject({0}) = true then", arg.ToString());
                            sbvbs.AppendLine();
                            sbvbs.AppendFormat(threetab + "set {0} = {1}", prop.name, arg.ToString());
                            sbvbs.AppendLine();
                            sbvbs.AppendLine(twotab + "else");
                            sbvbs.AppendFormat(threetab + "{0} = {1}", prop.name, arg.ToString());
                            sbvbs.AppendLine();
                            sbvbs.AppendLine(twotab + "end if");
                            sbvbs.AppendLine(onetab + "End Property");
                            sbvbs.AppendLine();
                        }

                        if (prop.bset)
                        {
                            sbvbs.AppendFormat(onetab + "Public Property Let {0}(", prop.name);
                            if (prop.setpars.Count > 0)
                            {
                                int k = 1;
                                foreach (Comobjectstorage.paramtr par in prop.setpars)
                                {
                                    sbvbs.AppendFormat("{0},", par.name);
                                    k++;
                                }
                            }
                            sbvbs.AppendFormat("p{0})", prop.name);
                            sbvbs.AppendLine();

                            StringBuilder arg = new StringBuilder();
                            arg.AppendFormat("remoteobj.{0}", prop.name);
                            if (prop.setpars.Count > 0)
                            {
                                int k = 1;
                                arg.Append("(");
                                foreach (Comobjectstorage.paramtr par in prop.setpars)
                                {
                                    arg.AppendFormat("{0}{1}  ", par.name, (k == prop.setpars.Count ? "" : ","));
                                    k++;
                                }
                                arg.Append(")");
                            }


                            sbvbs.AppendFormat(twotab + " if isobject(p{0}) = true then", prop.name);
                            sbvbs.AppendLine();
                            sbvbs.AppendFormat(threetab + "set {0} = p{1}", arg.ToString(), prop.name);
                            sbvbs.AppendLine();
                            sbvbs.AppendLine(twotab + "else");
                            sbvbs.AppendFormat(threetab + "{0} = p{1}", arg.ToString(), prop.name);
                            sbvbs.AppendLine();
                            sbvbs.AppendLine(twotab + "end if");
                            sbvbs.AppendLine(onetab + "End Property");
                            sbvbs.AppendLine();
                        }
                    }

                    foreach (Comobjectstorage.classmtds mtd in cob.mtds)
                    {
                        string ret = mtd.returntype;
                        sbvbs.AppendFormat(onetab + "Public {0} {1}(", mtd.getvbrettype(), mtd.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in mtd.pars)
                        {
                            sbvbs.AppendFormat("{0}{1} ", par.name, (k == mtd.pars.Count ? "" : ","));
                            k++;
                        }
                        sbvbs.AppendLine(")");

                        StringBuilder arg = new StringBuilder();
                        arg.AppendFormat("remoteobj.{0}", mtd.name);
                        if (mtd.pars.Count > 0)
                        {
                            k = 1;
                            arg.Append("(");
                            foreach (Comobjectstorage.paramtr par in mtd.pars)
                            {
                                arg.AppendFormat("{0}{1}  ", par.name, (k == mtd.pars.Count ? "" : ","));
                                k++;
                            }
                            arg.Append(")");
                        }

                        if (mtd.returntype == "Void")
                        {
                            sbvbs.AppendFormat(twotab + "call {0}", arg.ToString());
                            sbvbs.AppendLine();
                        }
                        else
                        {
                            sbvbs.AppendFormat(twotab + "{0} {1} = {2}", mtd.getvbgetset(), mtd.name, arg.ToString());
                            sbvbs.AppendLine();
                        }

                        sbvbs.AppendFormat(onetab + "End {0}", mtd.getvbrettype());
                        sbvbs.AppendLine();
                        sbvbs.AppendLine();
                    }

                    sbvbs.AppendLine();
                    sbvbs.AppendLine("End Class");
                    sbvbs.AppendLine();
                }
            }
            if (bcomplus)
            {

                sbvbs.AppendLine();
                sbvbs.AppendLine("Class VBCOMAdminHelper");
                sbvbs.AppendLine();
                sbvbs.AppendLine(onetab + LBCodeGenerator.Resource2.startstopcomappvb);
                sbvbs.AppendLine();
                foreach (Comobjectstorage cob in comobjs)
                {
                    sbvbs.AppendFormat(onetab + "Public Sub StartStopApplication_{0}_{1}(remotepc, bstart )", cob.namesp, cob.name);
                    sbvbs.AppendLine();
                    sbvbs.AppendFormat(twotab + "call StartStopApplication(remotepc,  \"{0}\",  bstart  )", cob.clsid.ToString("B"));
                    sbvbs.AppendLine();
                    sbvbs.AppendLine(onetab + "End Sub");

                    if (bwcf || bsscfserver)
                    {
                        sbvbs.AppendFormat(onetab + "Public Sub StartStopApplication_#1#_{0}(remotepc, bstart )", cob.name);
                        sbvbs.AppendLine();
                        sbvbs.AppendFormat(twotab + "call StartStopApplication(remotepc,  \"{0}\",  bstart  )", cob.wcfclsid.ToString("B"));
                        sbvbs.AppendLine();
                        sbvbs.AppendLine(onetab + "End Sub");
                    }

                }
                sbvbs.AppendLine();
                sbvbs.AppendLine("End Class");
                sbvbs.AppendLine();
            }
        }


        static void Generatewcfclass1cs(bool bnet35)
        {
            sbwcf.AppendLine(LBCodeGenerator.Resource2.class1);
            if (!bnet35)
                Generatewcfclass1cs40();
            else
                Generatewcfclass1cs35();
        }


        static void Generateclass1interfacescs(Comobjectstorage cob, bool bcom)
        {
            if (bcom)
            {
                sbwcf.AppendLine(onetab + "[ComVisible(true)]");
                sbwcf.AppendFormat(onetab + "public interface I{0}_{1}", cob.namesp, cob.name);
            }
            else
            {
                sbwcf.AppendFormat(onetab + "public interface I{0}_{1}:IDisposable", cob.namesp, cob.name);
            }
            sbwcf.AppendLine();
            sbwcf.AppendLine(onetab + "{");

            foreach (Comobjectstorage.classprops prop in cob.props)
            {
                if (prop.getpars.Count != 0 || prop.setpars.Count != 0)
                    continue;

                sbwcf.AppendFormat(twotab + "{0} {1}", prop.returntype, prop.name);
                sbwcf.Append("{");

                if (prop.bget)
                {
                    sbwcf.Append("get;");
                }

                if (prop.bset)
                {
                    sbwcf.Append("set;");
                }
                sbwcf.AppendLine("}");
            }


            foreach (Comobjectstorage.classprops prop in cob.props)
            {

                if (prop.bget && prop.getpars.Count != 0)
                {
                    sbwcf.AppendFormat(twotab + "{0} get_{1}(", prop.returntype, prop.name);
                    int k = 1;
                    foreach (Comobjectstorage.paramtr par in prop.getpars)
                    {
                        sbwcf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.getpars.Count ? "" : ","));
                        k++;
                    }
                    sbwcf.AppendLine(");");
                }

                if (prop.bset && prop.setpars.Count != 0)
                {
                    sbwcf.AppendFormat(twotab + "void set_{0}(", prop.name);
                    int k = 1;
                    foreach (Comobjectstorage.paramtr par in prop.setpars)
                    {
                        sbwcf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.setpars.Count ? "" : ","));
                        k++;
                    }
                    sbwcf.AppendLine(", object pvalue);");
                }
            }


            foreach (Comobjectstorage.classmtds mtd in cob.mtds)
            {
                string ret = mtd.returntype;
                sbwcf.AppendFormat(twotab + "{0} {1}(", mtd.getrettype(), mtd.name);
                int k = 1;
                foreach (Comobjectstorage.paramtr par in mtd.pars)
                {
                    sbwcf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == mtd.pars.Count ? "" : ","));
                    k++;
                }
                sbwcf.AppendLine(");");

            }

            sbwcf.AppendLine(onetab + "}");
            sbwcf.AppendLine();
            sbwcf.AppendLine();

        }

        static void Generatewcfclass1cs40()
        {
            foreach (Comobjectstorage cob in comobjs)
            {
                Generateclass1interfacescs(cob,true);

                sbwcf.AppendLine(onetab + "[ComVisible(true)]");
                sbwcf.AppendFormat(onetab + "[Guid(\"{0}\")]", cob.wcfclsid);
                sbwcf.AppendLine();
                sbwcf.AppendFormat(onetab + "public class COM_LB_{0}_{1}:ServicedComponent,I{0}_{1}", cob.namesp, cob.name);
                sbwcf.AppendLine();
                sbwcf.AppendLine(onetab + "{");

                sbwcf.AppendLine(twotab + "dynamic remoteobj;");
                sbwcf.AppendLine();
                sbwcf.AppendFormat(twotab + "public COM_LB_{0}_{1}()", cob.namesp, cob.name);
                sbwcf.AppendLine();
                sbwcf.AppendLine(twotab + "{");
                sbwcf.AppendFormat(threetab + "remoteobj = Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(\"{0}\")));", cob.clsid);
                sbwcf.AppendLine();
                sbwcf.AppendLine(twotab + "}");
                sbwcf.AppendLine();

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.getpars.Count != 0 || prop.setpars.Count != 0)
                        continue;

                    sbwcf.AppendFormat(twotab + "public {0} {1}", prop.returntype, prop.name);
                    sbwcf.AppendLine();
                    sbwcf.AppendLine(twotab + "{");

                    if (prop.bget)
                    {
                        sbwcf.AppendLine(threetab + "get");
                        sbwcf.AppendLine(threetab + "{");
                        sbwcf.AppendFormat(fourtab + "return remoteobj.{0};", prop.name);
                        sbwcf.AppendLine();
                        sbwcf.AppendLine(threetab + "}");
                    }

                    if (prop.bset)
                    {
                        sbwcf.AppendLine(threetab + "set");
                        sbwcf.AppendLine(threetab + "{");
                        sbwcf.AppendFormat(fourtab + "remoteobj.{0} = value;", prop.name);
                        sbwcf.AppendLine();
                        sbwcf.AppendLine(threetab + "}");
                    }

                    sbwcf.AppendLine(twotab + "}");
                    sbwcf.AppendLine();

                }

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.bget && prop.getpars.Count != 0)
                    {
                        sbwcf.AppendFormat(twotab + "public {0} get_{1}(", prop.returntype, prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbwcf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbwcf.AppendLine(")");
                        sbwcf.AppendLine(twotab + "{");
                        sbwcf.AppendFormat(threetab + "return remoteobj.{0}[", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbwcf.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbwcf.AppendLine("];");
                        sbwcf.AppendLine(twotab + "}");
                        sbwcf.AppendLine();
                    }

                    if (prop.bset && prop.setpars.Count != 0)
                    {
                        sbwcf.AppendFormat(twotab + "public void set_{0}(", prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbwcf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbwcf.AppendLine(", object pvalue)");
                        sbwcf.AppendLine(twotab + "{");
                        sbwcf.AppendFormat(threetab + "remoteobj.{0}[", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbwcf.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbwcf.AppendLine("] = pvalue;");
                        sbwcf.AppendLine(twotab + "}");
                        sbwcf.AppendLine();
                    }
                }

                foreach (Comobjectstorage.classmtds mtd in cob.mtds)
                {
                    string ret = mtd.returntype;

                    sbwcf.AppendFormat(twotab + "public {0} {1}(", mtd.getrettype(), mtd.name);

                    int k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbwcf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbwcf.AppendLine(")");

                    sbwcf.AppendLine(twotab + "{");
                    sbwcf.AppendFormat(threetab + "{0} remoteobj.{1}(", mtd.getcallrettype(), mtd.name);

                    k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbwcf.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbwcf.AppendLine(");");

                    sbwcf.AppendLine(twotab + "}");
                    sbwcf.AppendLine();

                }

                sbwcf.AppendLine();
                sbwcf.AppendLine(onetab + "}");
                sbwcf.AppendLine();
                sbwcf.AppendLine();
            }
            sbwcf.AppendLine("}");
            
        }

        static void Generatewcfclass1cs35()
        {
            foreach (Comobjectstorage cob in comobjs)
            {
                Generateclass1interfacescs(cob,true);

                sbwcf.AppendLine(onetab + "[ComVisible(true)]");
                sbwcf.AppendFormat(onetab + "[Guid(\"{0}\")]", cob.wcfclsid);
                sbwcf.AppendLine();
                sbwcf.AppendFormat(onetab + "public class COM_LB_{0}_{1}:ServicedComponent,I{0}_{1}", cob.namesp, cob.name);
                sbwcf.AppendLine();
                sbwcf.AppendLine(onetab + "{");

                sbwcf.AppendLine(twotab + "object remoteobj;");
                sbwcf.AppendLine();
                sbwcf.AppendFormat(twotab + "public COM_LB_{0}_{1}()", cob.namesp, cob.name);
                sbwcf.AppendLine();
                sbwcf.AppendLine(twotab + "{");
                sbwcf.AppendFormat(threetab + "remoteobj = Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(\"{0}\")));", cob.clsid);
                sbwcf.AppendLine();
                sbwcf.AppendLine(twotab + "}");
                sbwcf.AppendLine();

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.getpars.Count != 0 || prop.setpars.Count != 0)
                        continue;

                    sbwcf.AppendFormat(twotab + "public {0} {1}", prop.returntype, prop.name);
                    sbwcf.AppendLine();
                    sbwcf.AppendLine(twotab + "{");

                    if (prop.bget)
                    {
                        sbwcf.AppendLine(threetab + "get");
                        sbwcf.AppendLine(threetab + "{");
                        sbwcf.AppendFormat(fourtab + "return ({0}) remoteobj.GetType().InvokeMember(\"{1}\",BindingFlags.GetProperty, null, remoteobj, null);", prop.returntype, prop.name);
                        sbwcf.AppendLine();
                        sbwcf.AppendLine(threetab + "}");
                    }

                    if (prop.bset)
                    {
                        sbwcf.AppendLine(threetab + "set");
                        sbwcf.AppendLine(threetab + "{");
                        sbwcf.AppendLine(fourtab + "object[] parameters = new object[]{value};");
                        sbwcf.AppendFormat(fourtab + "remoteobj.GetType().InvokeMember(\"{0}\", BindingFlags.SetProperty,null, remoteobj, parameters);", prop.name);
                        sbwcf.AppendLine();
                        sbwcf.AppendLine(threetab + "}");
                    }

                    sbwcf.AppendLine(twotab + "}");
                    sbwcf.AppendLine();

                }

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.bget && prop.getpars.Count != 0)
                    {
                        sbwcf.AppendFormat(twotab + "public {0} get_{1}(", prop.returntype, prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbwcf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbwcf.AppendLine(")");
                        sbwcf.AppendLine(twotab + "{");
                        sbwcf.AppendFormat(threetab + "object[] parameters = new object[]{0}", '{');
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbwcf.AppendFormat("{0}{1} ", par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbwcf.AppendFormat("{0};", '}');
                        sbwcf.AppendLine();
                        sbwcf.AppendFormat(threetab + "return ({0}) remoteobj.GetType().InvokeMember(\"{1}\", BindingFlags.GetProperty,null, remoteobj, parameters);", prop.returntype, prop.name);
                        sbwcf.AppendLine();
                        sbwcf.AppendLine(twotab + "}");
                        sbwcf.AppendLine();
                    }

                    if (prop.bset && prop.setpars.Count != 0)
                    {
                        sbwcf.AppendFormat(twotab + "public void set_{0}(", prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbwcf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbwcf.AppendLine(", object pvalue)");
                        sbwcf.AppendLine(twotab + "{");

                        sbwcf.AppendFormat(fourtab + "object[] parameters = new object[]{0}", '{');
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbwcf.AppendFormat("{0}{1} ", par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbwcf.AppendFormat(",pvalue{0};", '}');
                        sbwcf.AppendLine();
                        sbwcf.AppendFormat(fourtab + "remoteobj.GetType().InvokeMember(\"{0}\", BindingFlags.SetProperty,null, remoteobj, parameters);", prop.name);
                        sbwcf.AppendLine(twotab + "}");
                        sbwcf.AppendLine();
                    }
                }

                foreach (Comobjectstorage.classmtds mtd in cob.mtds)
                {
                    string ret = mtd.returntype;

                    sbwcf.AppendFormat(twotab + "public {0} {1}(", mtd.getrettype(), mtd.name);

                    int k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbwcf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbwcf.AppendLine(")");

                    sbwcf.AppendLine(twotab + "{");
                    sbwcf.AppendLine(threetab + "object[] parameters = null;");

                    if (mtd.pars.Count > 0)
                    {
                        sbwcf.AppendFormat(threetab + "parameters = new object[]{0}", '{');
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in mtd.pars)
                        {
                            sbwcf.AppendFormat("{0}{1} ", par.name, (k == mtd.pars.Count ? "" : ","));
                            k++;
                        }
                        sbwcf.AppendFormat("{0};", '}');
                        sbwcf.AppendLine();
                    }
                    sbwcf.AppendFormat(threetab + "{0}{1}remoteobj.GetType().InvokeMember(\"{2}\",BindingFlags.InvokeMethod, null,remoteobj,parameters);", mtd.getcallrettype(), (mtd.getcallrettype() != "") ? (" (" + mtd.returntype + ") ") : "", mtd.name);
                    sbwcf.AppendLine();

                    sbwcf.AppendLine(twotab + "}");
                    sbwcf.AppendLine();

                }

                sbwcf.AppendLine();
                sbwcf.AppendLine(onetab + "}");
                sbwcf.AppendLine();
                sbwcf.AppendLine();
            }
            sbwcf.AppendLine("}");

        }

        static void Generatesscfclass1cs()
        {
            sbsscf.AppendLine(LBCodeGenerator.Resource2.sscfclass1);
            foreach (Comobjectstorage cob in comobjs)
            {
                sbsscf.AppendLine(onetab + "[ComVisible(true)]");
                sbsscf.AppendFormat(onetab + "[Guid(\"{0}\")]", cob.wcfclsid);
                sbsscf.AppendLine();
                if (cob.iscomplus)
                    sbsscf.AppendFormat(onetab + "public class COM_LB_{0}_{1}:ServicedComponent", cob.namesp, cob.name);
                else
                    sbsscf.AppendFormat(onetab + "public class COM_LB_{0}_{1}", cob.namesp, cob.name);

                sbsscf.AppendLine();
                sbsscf.AppendLine(onetab + "{");
                
                sbsscf.AppendFormat(twotab + "static SSCF_{0}_{1} sscfService;", cob.namesp, cob.name);
                sbsscf.AppendLine();
                sbsscf.AppendLine(twotab + "static DispatcherThread serviceThread;");
                sbsscf.AppendLine(twotab + "public static string AdapterBroadcastIpAddress;");
                sbsscf.AppendLine(twotab + "public static string ServiceUrn;");
                sbsscf.AppendLine();

                sbsscf.AppendFormat(twotab + "public COM_LB_{0}_{1}()", cob.namesp, cob.name);
                sbsscf.AppendLine();
                sbsscf.AppendLine(twotab + "{");
                sbsscf.AppendLine(twotab + "}");

                sbsscf.AppendLine(twotab + "public void Shutdown()");
                sbsscf.AppendLine(twotab + "{");
                sbsscf.AppendLine(threetab + "serviceThread.Shutdown();");
                sbsscf.AppendLine(twotab + "}");

                sbsscf.AppendLine(twotab + "public void Startup(string ipAddress, string urn)");
                sbsscf.AppendLine(twotab + "{");
                sbsscf.AppendLine(threetab + "AdapterBroadcastIpAddress = ipAddress;");
                sbsscf.AppendLine(threetab + "ServiceUrn = urn;");
                sbsscf.AppendLine(threetab + "serviceThread = new DispatcherThread(ServiceThread);");
                sbsscf.AppendLine(threetab + "serviceThread.Start();");
                sbsscf.AppendLine(twotab + "}");

                sbsscf.AppendLine(twotab + "private void ServiceThread()");
                sbsscf.AppendLine(twotab + "{");
                sbsscf.AppendFormat(threetab + "sscfService = new SSCF_{0}_{1}(ServiceUrn);", cob.namesp, cob.name);
                sbsscf.AppendLine();
                sbsscf.AppendLine(threetab + "Dispatcher.Run();");
                sbsscf.AppendLine(threetab + "sscfService.Dispose();");
                sbsscf.AppendLine(twotab + "}");
                sbsscf.AppendLine();
                sbsscf.AppendLine(onetab + "}");
                sbsscf.AppendLine();
                sbsscf.AppendLine();
            }
            sbsscf.AppendLine("}");

        }

        static void Generatesscfinterfaces()
        {
            sbsscfI.AppendLine("using System;");
            sbsscfI.AppendLine("namespace #1#");
            sbsscfI.AppendLine("{");
            foreach (Comobjectstorage cob in comobjs)
            {
                Generateclass1interfacescs(cob, false);
            }
            sbsscfI.Append(sbwcf.ToString());
            sbsscfI.AppendLine("}");
        }

        static void Generatesscfimpl()
        {

            sbsscfC.AppendLine("using System;");
            sbsscfC.AppendLine("using System.Collections.Generic;");
            sbsscfC.AppendLine("using System.Windows.Threading;");
            sbsscfC.AppendLine("using System.Net;");
            sbsscfC.AppendLine("using SscfTs1DotNet;");
            sbsscfC.AppendLine();
            sbsscfC.AppendLine("namespace #1#");
            sbsscfC.AppendLine("{");

            foreach (Comobjectstorage cob in comobjs)
            {
                sbsscfC.AppendLine();
                sbsscfC.AppendFormat(onetab + "class SSCF_{0}_{1}:I{0}_{1}", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(onetab + "{");

                sbsscfC.AppendLine(twotab + "private bool disposed;");
                sbsscfC.AppendLine(twotab + "private ServerNode sscfServer;");
                sbsscfC.AppendLine(twotab + "private Dictionary<string /*sscf id*/, string /*name*/> subscribedClients = new Dictionary<string, string>();");


                sbsscfC.AppendLine(twotab + "dynamic remoteobj;");
                sbsscfC.AppendLine();
                sbsscfC.AppendFormat(twotab + "public SSCF_{0}_{1}(string ServiceUrn )", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendFormat(threetab + "remoteobj = Activator.CreateInstance(Type.GetTypeFromCLSID(new Guid(\"{0}\")));", cob.clsid);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(threetab + "int portno;");
                sbsscfC.AppendLine(threetab + "if (!int.TryParse(ServiceUrn, out portno))");
                sbsscfC.AppendFormat(fourtab + "sscfServer = new ServerNode(Dispatcher.CurrentDispatcher,COM_LB_{0}_{1}.AdapterBroadcastIpAddress,ServiceUrn);", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(threetab + "else");
                sbsscfC.AppendFormat(fourtab + "sscfServer = new ServerNode(Dispatcher.CurrentDispatcher,(ushort)portno,COM_LB_{0}_{1}.AdapterBroadcastIpAddress);", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendFormat(threetab + "sscfServer.RegisterSingleton<I{0}_{1}>(this);", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(threetab + "sscfServer.Connected += OnClientConnected;");
                sbsscfC.AppendLine(threetab + "sscfServer.Disconnected += OnClientDisconnected;");
                sbsscfC.AppendLine(threetab + "sscfServer.Listen();");
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();

                sbsscfC.AppendLine(twotab + "private void OnClientConnected(string sscfClienthostid)");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "subscribedClients.Add(sscfClienthostid, \"client ...\");");
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();

                sbsscfC.AppendLine(twotab + "private void OnClientDisconnected(string sscfClienthostid)");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "if (subscribedClients.ContainsKey(sscfClienthostid))");
                sbsscfC.AppendLine(threetab + "{");
                sbsscfC.AppendLine(fourtab + "subscribedClients.Remove(sscfClienthostid);");
                sbsscfC.AppendLine(threetab + "}");
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.getpars.Count != 0 || prop.setpars.Count != 0)
                        continue;

                    sbsscfC.AppendFormat(twotab + "public {0} {1}", prop.returntype, prop.name);
                    sbsscfC.AppendLine();
                    sbsscfC.AppendLine(twotab + "{");

                    if (prop.bget)
                    {
                        sbsscfC.AppendLine(threetab + "get");
                        sbsscfC.AppendLine(threetab + "{");
                        sbsscfC.AppendFormat(fourtab + "return remoteobj.{0};", prop.name);
                        sbsscfC.AppendLine();
                        sbsscfC.AppendLine(threetab + "}");
                    }

                    if (prop.bset)
                    {
                        sbsscfC.AppendLine(threetab + "set");
                        sbsscfC.AppendLine(threetab + "{");
                        sbsscfC.AppendFormat(fourtab + "remoteobj.{0} = value;", prop.name);
                        sbsscfC.AppendLine();
                        sbsscfC.AppendLine(threetab + "}");
                    }

                    sbsscfC.AppendLine(twotab + "}");
                    sbsscfC.AppendLine();

                }

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.bget && prop.getpars.Count != 0)
                    {
                        sbsscfC.AppendFormat(twotab + "public {0} get_{1}(", prop.returntype, prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbsscfC.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscfC.AppendLine(")");
                        sbsscfC.AppendLine(twotab + "{");
                        sbsscfC.AppendFormat(threetab + "return remoteobj.{0}[", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbsscfC.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscfC.AppendLine("];");
                        sbsscfC.AppendLine(twotab + "}");
                        sbsscfC.AppendLine();
                    }

                    if (prop.bset && prop.setpars.Count != 0)
                    {
                        sbsscfC.AppendFormat(twotab + "public void set_{0}(", prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbsscfC.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscfC.AppendLine(", object pvalue)");
                        sbsscfC.AppendLine(twotab + "{");
                        sbsscfC.AppendFormat(threetab + "remoteobj.{0}[", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbsscfC.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscfC.AppendLine("] = pvalue;");
                        sbsscfC.AppendLine(twotab + "}");
                        sbsscfC.AppendLine();
                    }
                }

                foreach (Comobjectstorage.classmtds mtd in cob.mtds)
                {
                    string ret = mtd.returntype;

                    sbsscfC.AppendFormat(twotab + "public {0} {1}(", mtd.getrettype(), mtd.name);

                    int k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbsscfC.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbsscfC.AppendLine(")");

                    sbsscfC.AppendLine(twotab + "{");
                    sbsscfC.AppendFormat(threetab + "{0} remoteobj.{1}(", mtd.getcallrettype(), mtd.name);

                    k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbsscfC.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbsscfC.AppendLine(");");

                    sbsscfC.AppendLine(twotab + "}");
                    sbsscfC.AppendLine();

                }

                sbsscfC.AppendLine(twotab + "public void Dispose()");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "Dispose(true);");
                sbsscfC.AppendLine(twotab + "}");

       
                sbsscfC.AppendLine(twotab + "protected virtual void Dispose(bool disposing)");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "if (!disposed)");
                sbsscfC.AppendLine(threetab + "{");
                sbsscfC.AppendLine(fourtab + "if (disposing)");
                sbsscfC.AppendLine(fourtab + "{");
                sbsscfC.AppendLine(fivetab + "if (sscfServer != null)");
                sbsscfC.AppendLine(fivetab + "{");
                sbsscfC.AppendLine(sixtab + "sscfServer.Connected -= OnClientConnected;");
                sbsscfC.AppendLine(sixtab + "sscfServer.Disconnected -= OnClientDisconnected;");
                sbsscfC.AppendLine(sixtab + "sscfServer.Dispose();");
                sbsscfC.AppendLine(sixtab + "sscfServer = null;");
                sbsscfC.AppendLine(fivetab + "}");
                sbsscfC.AppendLine(fourtab + "}");
                sbsscfC.AppendLine(fourtab + "disposed = true;");
                sbsscfC.AppendLine(threetab + "}");
                sbsscfC.AppendLine(twotab + "}");

                sbsscfC.AppendLine();
                sbsscfC.AppendLine(onetab + "}");
                sbsscfC.AppendLine();
                sbsscfC.AppendLine();
            }
            sbsscfC.AppendLine("}");

        }

        static void Generatesscfclientimpl()
        {

            sbsscfC.AppendLine("using System;");
            sbsscfC.AppendLine("using System.Collections.Generic;");
            sbsscfC.AppendLine("using System.Windows.Threading;");
            sbsscfC.AppendLine("using System.Net;");
            sbsscfC.AppendLine("using SscfTs1DotNet;");
            sbsscfC.AppendLine();
            sbsscfC.AppendLine("namespace #1#");
            sbsscfC.AppendLine("{");

            foreach (Comobjectstorage cob in comobjs)
            {
                sbsscfC.AppendLine();
                sbsscfC.AppendFormat(onetab + "class SSCF_{0}_{1}:IDisposable", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(onetab + "{");
                sbsscfC.AppendLine(twotab + "private bool disposed;");
                sbsscfC.AppendLine(twotab + "private ClientNode sscfClient;");
                sbsscfC.AppendFormat(twotab + "private {0}.{1} serviceProxy;", cob.namesp, cob.name);
                sbsscfC.AppendLine();

                sbsscfC.AppendLine();
                sbsscfC.AppendFormat(twotab + "public SSCF_{0}_{1}()", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "int port;");
                sbsscfC.AppendFormat(threetab + "string urn = COM_LB_{0}_{1}.urn;", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(threetab + "if (!int.TryParse(urn, out port))");
                sbsscfC.AppendFormat(fourtab + "sscfClient = new ClientNode(Dispatcher.CurrentDispatcher,COM_LB_{0}_{1}.AdapterBroadcastIpAddress,urn);", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(threetab + "else");
                sbsscfC.AppendFormat(fourtab + "sscfClient = new ClientNode(Dispatcher.CurrentDispatcher,COM_LB_{0}_{1}.AdapterBroadcastIpAddress,(ushort)port);", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(threetab + "sscfClient.Connected += OnConnectedOnSscfThread;");
                sbsscfC.AppendLine(threetab + "sscfClient.Disconnected += OnDisconnectedOnSscfThread;");
                sbsscfC.AppendLine(threetab + "sscfClient.Connect();");
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();
                

                sbsscfC.AppendLine(twotab + "private void OnConnectedOnSscfThread()");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendFormat(threetab + "if (sscfClient.ProvidesProxy<{0}.{1}>())", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(threetab + "{");
                sbsscfC.AppendFormat(fourtab + "serviceProxy = sscfClient.CreateProxy<{0}.{1}>();", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(threetab + "}");
                sbsscfC.AppendFormat(threetab + "COM_LB_{0}_{1}.startstopevt.Set();", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();

                sbsscfC.AppendLine(twotab + "private void OnDisconnectedOnSscfThread()");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "DisposeService();");
                sbsscfC.AppendFormat(threetab + "COM_LB_{0}_{1}.startstopevt.Set();", cob.namesp, cob.name);
                sbsscfC.AppendLine();
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();
            

                sbsscfC.AppendLine(twotab + "private void DisposeService()");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "if (serviceProxy != null)");
                sbsscfC.AppendLine(threetab + "{");
                sbsscfC.AppendLine(fourtab + "try");
                sbsscfC.AppendLine(fourtab + "{");
                sbsscfC.AppendLine(fivetab + "serviceProxy.Dispose();");
                sbsscfC.AppendLine(fivetab + "serviceProxy = null;");
                sbsscfC.AppendLine(fourtab + "}");
                sbsscfC.AppendLine(fourtab + "catch");
                sbsscfC.AppendLine(fourtab + "{");
                sbsscfC.AppendLine(fourtab + "}");
                sbsscfC.AppendLine(threetab + "}");
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();
                
                sbsscfC.AppendLine(twotab + "private void DisposeClient()");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "try");
                sbsscfC.AppendLine(threetab + "{");
                sbsscfC.AppendLine(fourtab + "sscfClient.Connected -= OnConnectedOnSscfThread;");
                sbsscfC.AppendLine(fourtab + "sscfClient.Disconnected -= OnDisconnectedOnSscfThread;");
                sbsscfC.AppendLine(threetab + "}");
                sbsscfC.AppendLine(threetab + "catch");
                sbsscfC.AppendLine(threetab + "{");
                sbsscfC.AppendLine(threetab + "}");
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();
        
                sbsscfC.AppendLine(twotab + "public void Dispose()");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "Dispose(true);");
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();

                sbsscfC.AppendLine(twotab + "protected virtual void Dispose(bool disposing)");
                sbsscfC.AppendLine(twotab + "{");
                sbsscfC.AppendLine(threetab + "if (!disposed)");
                sbsscfC.AppendLine(threetab + "{");
                sbsscfC.AppendLine(fourtab + "if (disposing)");
                sbsscfC.AppendLine(fourtab + "{");
                sbsscfC.AppendLine(fivetab + "DisposeService();");
                sbsscfC.AppendLine(fivetab + "DisposeClient();");
                sbsscfC.AppendLine(fourtab + "}");
                sbsscfC.AppendLine(threetab + "}");
                sbsscfC.AppendLine(threetab + "disposed = true;");
                sbsscfC.AppendLine(twotab + "}");
                sbsscfC.AppendLine();


                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.getpars.Count != 0 || prop.setpars.Count != 0)
                        continue;

                    sbsscfC.AppendFormat(twotab + "public {0} {1}", prop.returntype, prop.name);
                    sbsscfC.AppendLine();
                    sbsscfC.AppendLine(twotab + "{");

                    if (prop.bget)
                    {
                        sbsscfC.AppendLine(threetab + "get");
                        sbsscfC.AppendLine(threetab + "{");
                        sbsscfC.AppendFormat(fourtab + "return serviceProxy.{0};", prop.name);
                        sbsscfC.AppendLine();
                        sbsscfC.AppendLine(threetab + "}");
                    }

                    if (prop.bset)
                    {
                        sbsscfC.AppendLine(threetab + "set");
                        sbsscfC.AppendLine(threetab + "{");
                        sbsscfC.AppendFormat(fourtab + "serviceProxy.{0} = value;", prop.name);
                        sbsscfC.AppendLine();
                        sbsscfC.AppendLine(threetab + "}");
                    }

                    sbsscfC.AppendLine(twotab + "}");
                    sbsscfC.AppendLine();

                }

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.bget && prop.getpars.Count != 0)
                    {
                        sbsscfC.AppendFormat(twotab + "public {0} get_{1}(", prop.returntype, prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbsscfC.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscfC.AppendLine(")");
                        sbsscfC.AppendLine(twotab + "{");
                        sbsscfC.AppendFormat(threetab + "return serviceProxy.{0}[", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbsscfC.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscfC.AppendLine("];");
                        sbsscfC.AppendLine(twotab + "}");
                        sbsscfC.AppendLine();
                    }

                    if (prop.bset && prop.setpars.Count != 0)
                    {
                        sbsscfC.AppendFormat(twotab + "public void set_{0}(", prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbsscfC.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscfC.AppendLine(", object pvalue)");
                        sbsscfC.AppendLine(twotab + "{");
                        sbsscfC.AppendFormat(threetab + "serviceProxy.{0}[", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbsscfC.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscfC.AppendLine("] = pvalue;");
                        sbsscfC.AppendLine(twotab + "}");
                        sbsscfC.AppendLine();
                    }
                }

                foreach (Comobjectstorage.classmtds mtd in cob.mtds)
                {
                    string ret = mtd.returntype;

                    sbsscfC.AppendFormat(twotab + "public {0} {1}(", mtd.getrettype(), mtd.name);

                    int k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbsscfC.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbsscfC.AppendLine(")");

                    sbsscfC.AppendLine(twotab + "{");
                    sbsscfC.AppendFormat(threetab + "{0} serviceProxy.{1}(", mtd.getcallrettype(), mtd.name);

                    k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbsscfC.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbsscfC.AppendLine(");");

                    sbsscfC.AppendLine(twotab + "}");
                    sbsscfC.AppendLine();

                }

                sbsscfC.AppendLine();
                sbsscfC.AppendLine(onetab + "}");
                sbsscfC.AppendLine();
                sbsscfC.AppendLine();
            }
            sbsscfC.AppendLine("}");

        }


        static void Generatesscfclientclass1cs()
        {
            sbsscf.AppendLine(LBCodeGenerator.Resource2.sscfclass1);
            foreach (Comobjectstorage cob in comobjs)
            {
                sbsscf.AppendLine(onetab + "[ComVisible(true)]");
                sbsscf.AppendFormat(onetab + "[Guid(\"{0}\")]", cob.wcfclsid);
                sbsscf.AppendLine();
                sbsscf.AppendFormat(onetab + "public class COM_LB_{0}_{1}", cob.namesp, cob.name);
                sbsscf.AppendLine();
                sbsscf.AppendLine(onetab + "{");

                sbsscf.AppendFormat(twotab + "static SSCF_{0}_{1} sscfService;", cob.namesp, cob.name);
                sbsscf.AppendLine();
                sbsscf.AppendLine(twotab + "static DispatcherThread serviceThread;");
                sbsscf.AppendLine(twotab + "public static string AdapterBroadcastIpAddress;");
                sbsscf.AppendLine(twotab + "public static string urn;");
                sbsscf.AppendLine(twotab + "public static AutoResetEvent startstopevt = new AutoResetEvent(false);");


                sbsscf.AppendLine();
                sbsscf.AppendLine(twotab + "public void Shutdown()");
                sbsscf.AppendLine(twotab + "{");
                sbsscf.AppendLine(threetab + "startstopevt.Reset();");
                sbsscf.AppendLine(threetab + "serviceThread.Shutdown();");
                sbsscf.AppendLine(threetab + "startstopevt.WaitOne(10000);");
                sbsscf.AppendLine(twotab + "}");

                sbsscf.AppendLine(twotab + "public void Startup(string ipaddress,string urnorport)");
                sbsscf.AppendLine(twotab + "{");
                sbsscf.AppendLine(threetab + "AdapterBroadcastIpAddress = ipaddress;");
                sbsscf.AppendLine(threetab + "urn = urnorport;");
                sbsscf.AppendLine(threetab + "startstopevt.Reset();");
                sbsscf.AppendLine(threetab + "serviceThread = new DispatcherThread(ServiceThread);");
                sbsscf.AppendLine(threetab + "serviceThread.Start();");
                sbsscf.AppendLine(threetab + "startstopevt.WaitOne(10000);");
                sbsscf.AppendLine(twotab + "}");

                sbsscf.AppendLine(twotab + "private void ServiceThread()");
                sbsscf.AppendLine(twotab + "{");
                sbsscf.AppendFormat(threetab + "sscfService = new SSCF_{0}_{1}();", cob.namesp, cob.name);
                sbsscf.AppendLine();
                sbsscf.AppendLine(threetab + "Dispatcher.Run();");
                sbsscf.AppendLine(threetab + "sscfService.Dispose();");
                sbsscf.AppendLine(twotab + "}");
                sbsscf.AppendLine();

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.getpars.Count != 0 || prop.setpars.Count != 0)
                        continue;

                    sbsscf.AppendFormat(twotab + "public {0} {1}", prop.returntype, prop.name);
                    sbsscf.AppendLine();
                    sbsscf.AppendLine(twotab + "{");

                    if (prop.bget)
                    {
                        sbsscf.AppendLine(threetab + "get");
                        sbsscf.AppendLine(threetab + "{");
                        sbsscf.AppendFormat(fourtab + "return ({0})serviceThread.Dispatcher.Invoke(new Func<{0}>(() => {1} return sscfService.{2}; {3})); ", prop.returntype, "{", prop.name, "}");
                        sbsscf.AppendLine();
                        sbsscf.AppendLine(threetab + "}");
                    }

                    if (prop.bset)
                    {
                        sbsscf.AppendLine(threetab + "set");
                        sbsscf.AppendLine(threetab + "{");
                        sbsscf.AppendFormat(fourtab + "serviceThread.Dispatcher.Invoke(new Action(() => {0}sscfService.{1} = value; {2}));", "{", prop.name, "}");
                        sbsscf.AppendLine();
                        sbsscf.AppendLine(threetab + "}");
                    }

                    sbsscf.AppendLine(twotab + "}");
                    sbsscf.AppendLine();

                }

                foreach (Comobjectstorage.classprops prop in cob.props)
                {
                    if (prop.bget && prop.getpars.Count != 0)
                    {
                        sbsscf.AppendFormat(twotab + "public {0} get_{1}(", prop.returntype, prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbsscf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscf.AppendLine(")");
                        sbsscf.AppendLine(twotab + "{");
                        sbsscf.AppendFormat(threetab + "return ({0})serviceThread.Dispatcher.Invoke(new Func<{0}>(() => {1} return sscfService.{2}[", prop.returntype, "{", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.getpars)
                        {
                            sbsscf.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.getpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscf.AppendFormat("];{0}));", "}");
                        sbsscf.AppendLine();
                    }

                    if (prop.bset && prop.setpars.Count != 0)
                    {
                        sbsscf.AppendFormat(twotab + "public void set_{0}(", prop.name);
                        int k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbsscf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscf.AppendLine(", object pvalue)");
                        sbsscf.AppendLine(twotab + "{");
                        sbsscf.AppendFormat(threetab + "serviceThread.Dispatcher.Invoke(new Action(() => {0}sscfService.{1}[", "{", prop.name);
                        k = 1;
                        foreach (Comobjectstorage.paramtr par in prop.setpars)
                        {
                            sbsscf.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == prop.setpars.Count ? "" : ","));
                            k++;
                        }
                        sbsscf.AppendFormat("] = pvalue;{0}));","}");
                        sbsscf.AppendLine();
                    }
                }

                foreach (Comobjectstorage.classmtds mtd in cob.mtds)
                {
                    string ret = mtd.returntype;

                    sbsscf.AppendFormat(twotab + "public {0} {1}(", mtd.getrettype(), mtd.name);

                    int k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbsscf.AppendFormat("{0} {1} {2}{3} ", par.getpardeco(), par.vartype, par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbsscf.AppendLine(")");

                    sbsscf.AppendLine(twotab + "{");
                    if (mtd.getcallrettype() == "")
                        sbsscf.AppendFormat(threetab + "serviceThread.Dispatcher.Invoke(new Action(() => {0} sscfService.{1}(", "{",   mtd.name);
                    else
                        sbsscf.AppendFormat(threetab + "return ({0})serviceThread.Dispatcher.Invoke(new Func<{0}>(() => {1} return sscfService.{2}(", mtd.getrettype(), "{", mtd.name);

                    k = 1;
                    foreach (Comobjectstorage.paramtr par in mtd.pars)
                    {
                        sbsscf.AppendFormat("{0} {1}{2} ", par.getpardeco(), par.name, (k == mtd.pars.Count ? "" : ","));
                        k++;
                    }
                    sbsscf.AppendFormat(");{0}));", "}");
                    sbsscf.AppendLine();

                    sbsscf.AppendLine(twotab + "}");
                    sbsscf.AppendLine();

                }

                sbsscf.AppendLine(onetab + "}");
                sbsscf.AppendLine();
                sbsscf.AppendLine();


            }
            sbsscf.AppendLine("}");

        }


        static void Generateclassesreg()
        {
            sbreg.AppendLine("Windows Registry Editor Version 5.00");
            sbreg.AppendLine();

            foreach (Comobjectstorage cob in comobjs)
            {
                sbreg.AppendFormat("[HKEY_CLASSES_ROOT\\{0}.{1}\\CLSID]",cob.namesp,cob.name);
                sbreg.AppendLine();
                sbreg.AppendFormat("@=\"{1}{0}{2}\"",cob.clsid,'{','}');
                sbreg.AppendLine();
                sbreg.AppendLine();
            }
        }

    }
}
